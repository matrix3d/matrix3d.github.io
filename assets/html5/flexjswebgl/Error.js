/**
 * Generated by Apache Flex Cross-Compiler from Error.as
 * Error
 *
 * @fileoverview
 *
 * @suppress {checkTypes}
 */

goog.provide('Error');



/**
 * @constructor
 * @param {*=} message
 * @param {*=} id
 */
Error = function(message, id) {
  message = typeof message !== 'undefined' ? message : "";
  id = typeof id !== 'undefined' ? id : 0;
  ;
  this.message = message;
  this._errorID = id;
  this.name;
};


/**
 * @export
 * @const
 * @type {number}
 */
Error.length = 1;


/**
 * @export
 * @type {Object}
 */
Error.prototype.message;


/**
 * @export
 * @type {string}
 */
Error.prototype.name;


/**
 * @private
 * @type {number}
 */
Error.prototype._errorID;


/**
 * @export
 * @param {number} param1
 * @return {string}
 */
Error.getErrorMessage = function(param1) {
  return null;
};


/**
 * @export
 * @param {Object} type
 * @param {number} index
 * @param {...} rest
 * @return {*}
 */
Error.throwError = function(type, index, rest) {
  rest = Array.prototype.slice.call(arguments, 2);
  var /** @type {*} */ i = 0;
  var /** @type {*} */ f = function(match, pos, string) {
    var /** @type {*} */ arg_num = -1;
    switch (match.charAt(1)) {
      case "1":
        break;
      case "2":
        arg_num = 1;
        break;
      case "3":
        arg_num = 2;
        break;
      case "4":
        arg_num = 3;
        break;
      case "5":
        arg_num = 4;
        break;
      case "6":
      
      case 6:
        arg_num = 5;
        break;
      default:
        arg_num = 0;
    }
    if (arg_num > -1 && rest.length > arg_num) {
      return rest[arg_num];
    }
    return "";
  };
  throw new type(Error.getErrorMessage(index).replace(new RegExp("%[0-9]", "g"), f), index);
};


/**
 * @export
 * @return {string}
 */
Error.prototype.getStackTrace = function() {
  return null;
};


Object.defineProperties(Error.prototype, /** @lends {Error.prototype} */ {
/** @export */
errorID: {
get: /** @this {Error} */ function() {
  return this._errorID;
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
Error.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Error', qName: 'Error'}] };
